import './App.css';
import Map, {
    Marker,
    Popup,
    NavigationControl,
    FullscreenControl,
    ScaleControl,
    GeolocateControl, Source, Layer
} from 'react-map-gl';
import {useState, useEffect, useMemo} from "react";
import React from "react";
import THEATRES from './theatres.json';
import Pin from "./Pin";
import mapboxgl from 'mapbox-gl';
import MapboxDirections from "@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions"

function App(){
    const [popupInfo, setPopupInfo] = useState(null);
    const TOKEN = 'pk.eyJ1IjoiY2hlY2h1cm92IiwiYSI6ImNsYmxiMXp1ZDA1a28zdnFxNGJnbHR3Z2QifQ.7tfOUn-31oHBDA7_GPN2ow'; // Set your mapbox token here

    const pins = useMemo(
        () =>
            THEATRES.map((city, index) => (
                <Marker
                    key={`marker-${index}`}
                    longitude={city.longitude}
                    latitude={city.latitude}
                    anchor="bottom"
                    onClick={e => {
                        e.originalEvent.stopPropagation();
                        setPopupInfo(city);
                    }}
                >
                    <Pin />
                </Marker>
            )),
        []
    );

    const route = {
        type: 'FeatureCollection',
        features: [
            {
                type: 'Feature',
                properties: {},
                geometry: {
                    type: 'LineString',
                    coordinates: [
                        [56.216951,58.008297 ],
                        [56.246873, 58.01117],
                    ],
                },
            },
        ],
    };

    const layerStyle = {
        id: 'route',
        type: 'line',
        source: {
            type: 'geojson',
            data: route,
        },
        layout: {
            'line-join': 'round',
            'line-cap': 'round',
        },
        paint: {
            'line-color': 'red',
            'line-width': 8,
        },
    };

    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é mapDirections —Å –ø–æ–º–æ—â—å—é useEffect
    useEffect(() => {
        mapboxgl.accessToken = TOKEN;
        const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/chechurov/cldj0qx1b002h01o65uimgmsm',
            center: [56.221997, 58.009209],
            zoom: 13
        });

        // // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
        // const directions =             new MapboxDirections({
        //     accessToken: mapboxgl.accessToken,
        //     language: 'ru-RU',
        //     unit: 'metric',
        //     placeholderOrigin: '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
        //     placeholderDestination: '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è',
        //     instructions: false,
        //     controls: {
        //         inputs: {
        //             instructions: '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
        //             inputPlaceholder: '–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ',
        //             // –¢–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∂–∏–º–∞ driving
        //             drivingSideOfRoad: '–°—Ç–æ—Ä–æ–Ω–∞ –¥–æ—Ä–æ–≥–∏',
        //             drivingStyle: '–°—Ç–∏–ª—å –≤–æ–∂–¥–µ–Ω–∏—è',
        //             drivingTraffic: '–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–æ–±–∫–∏',
        //             // –¢–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∂–∏–º–∞ walking
        //             walkingSymbol: 'üö∂',
        //             walkingTitle: '–ü–µ—à–µ—Ö–æ–¥',
        //             walkingDistance: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–µ—à–∫–æ–º',
        //             walkingTime: '–í—Ä–µ–º—è –ø–µ—à–∫–æ–º',
        //             // –¢–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∂–∏–º–∞ cycling
        //             cyclingTitle: '–í–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç',
        //             cyclingSymbol: 'üö¥',
        //             cyclingDistance: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ',
        //             cyclingTime: '–í—Ä–µ–º—è –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ',
        //             // –¢–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∂–∏–º–∞ transit
        //             transitTitle: '–¢—Ä–∞–Ω–∑–∏—Ç',
        //             transitSymbol: 'üöç',
        //             transitDepartureTime: '–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
        //             transitArrivalTime: '–í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è',
        //             transitNumberOfStops: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫',
        //             transitPrice: '–°—Ç–æ–∏–º–æ—Å—Ç—å',
        //         },
        //         settings:false
        //         // settings: {
        //         //     settingsTitle: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
        //         //     avoidTitle: '–ò–∑–±–µ–≥–∞—Ç—å',
        //         //     avoidFerries: '–ü–∞—Ä–æ–º—ã',
        //         //     avoidTolls: '–ü–ª–∞—Ç–Ω—ã–µ –¥–æ—Ä–æ–≥–∏',
        //         //     profileTitle: '–ü—Ä–æ—Ñ–∏–ª—å',
        //         //     profileWalking: '–ü–µ—à–∫–æ–º',
        //         //     profileCycling: '–ù–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ',
        //         //     profileDriving: '–ù–∞ –º–∞—à–∏–Ω–µ',
        //         //     profileTransit: '–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
        //         //     unitTitle: '–ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è',
        //         //     unitMetric: '–ú–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ',
        //         //     unitImperial: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–µ',
        //         //     languageTitle: '–Ø–∑—ã–∫',
        //         //     languagePlaceholder: '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫',
        //         //     languageOptionLabel: '{language} ({nativeLanguage})',
        //         // },
        //     },
        // })

        map.addControl(
            new MapboxDirections({
                accessToken: mapboxgl.accessToken,
                language: 'ru-RU',
                unit: 'metric',
                placeholderOrigin: '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                placeholderDestination: '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è',
                instructions: false,
                controls: {
                    inputs: {
                        instructions: '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
                        inputPlaceholder: '–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ',
                        // –¢–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∂–∏–º–∞ driving
                        drivingSideOfRoad: '–°—Ç–æ—Ä–æ–Ω–∞ –¥–æ—Ä–æ–≥–∏',
                        drivingStyle: '–°—Ç–∏–ª—å –≤–æ–∂–¥–µ–Ω–∏—è',
                        drivingTraffic: '–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–æ–±–∫–∏',
                        // –¢–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∂–∏–º–∞ walking
                        walkingSymbol: 'üö∂',
                        walkingTitle: '–ü–µ—à–µ—Ö–æ–¥',
                        walkingDistance: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–µ—à–∫–æ–º',
                        walkingTime: '–í—Ä–µ–º—è –ø–µ—à–∫–æ–º',
                        // –¢–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∂–∏–º–∞ cycling
                        cyclingTitle: '–í–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç',
                        cyclingSymbol: 'üö¥',
                        cyclingDistance: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ',
                        cyclingTime: '–í—Ä–µ–º—è –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ',
                        // –¢–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∂–∏–º–∞ transit
                        transitTitle: '–¢—Ä–∞–Ω–∑–∏—Ç',
                        transitSymbol: 'üöç',
                        transitDepartureTime: '–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                        transitArrivalTime: '–í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è',
                        transitNumberOfStops: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫',
                        transitPrice: '–°—Ç–æ–∏–º–æ—Å—Ç—å',
                    },
                    settings: {
                        settingsTitle: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
                        avoidTitle: '–ò–∑–±–µ–≥–∞—Ç—å',
                        avoidFerries: '–ü–∞—Ä–æ–º—ã',
                        avoidTolls: '–ü–ª–∞—Ç–Ω—ã–µ –¥–æ—Ä–æ–≥–∏',
                        profileTitle: '–ü—Ä–æ—Ñ–∏–ª—å',
                        profileWalking: '–ü–µ—à–∫–æ–º',
                        profileCycling: '–ù–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ',
                        profileDriving: '–ù–∞ –º–∞—à–∏–Ω–µ',
                        profileTransit: '–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
                        unitTitle: '–ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è',
                        unitMetric: '–ú–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ',
                        unitImperial: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–µ',
                        languageTitle: '–Ø–∑—ã–∫',
                        languagePlaceholder: '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫',
                        languageOptionLabel: '{language} ({nativeLanguage})',
                    },
                },
            }),
            'top-left'
        );
    }, []);

  return (
    <div className="App">
        <div id="map">
        </div>
    </div>
  );
}

export default App;
